/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Size as PrismaSize } from "@prisma/client";

export class SizeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.SizeCountArgs, "select">): Promise<number> {
    return this.prisma.size.count(args);
  }

  async sizes(args: Prisma.SizeFindManyArgs): Promise<PrismaSize[]> {
    return this.prisma.size.findMany(args);
  }
  async size(args: Prisma.SizeFindUniqueArgs): Promise<PrismaSize | null> {
    return this.prisma.size.findUnique(args);
  }
  async createSize(args: Prisma.SizeCreateArgs): Promise<PrismaSize> {
    return this.prisma.size.create(args);
  }
  async updateSize(args: Prisma.SizeUpdateArgs): Promise<PrismaSize> {
    return this.prisma.size.update(args);
  }
  async deleteSize(args: Prisma.SizeDeleteArgs): Promise<PrismaSize> {
    return this.prisma.size.delete(args);
  }
}
